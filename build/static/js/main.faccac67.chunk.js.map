{"version":3,"sources":["components/Nav.js","components/SelectField.js","components/states/AwaitInput.js","components/states/SeedShow.js","components/InputArea.js","components/seedFormat.js","components/App.js","serviceWorker.js","index.js"],"names":["Nav","styled","nav","options","value","label","setFields","StyledSelect","onChange","fields","isMulti","placeholder","Select","model","setModel","copies","setCopies","generateRequest","Inputs","ModelName","autoFocus","e","target","required","NumberOfSeeds","parseInt","type","min","max","Submit","onClick","form","input","button","seeds","language","style","docco","useState","setSeeds","state","setState","fetchSeedData","req","a","axios","post","res","console","log","generateSeedStrings","error","capitalizedModel","replace","l","toUpperCase","data","number","seed","i","toLowerCase","properties","Object","keys","map","obj","join","seedFormat","preventDefault","process","field","_repeat","loading","show","SeedShow","Loading","Error","Container","main","App","className","InputArea","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.faccac67.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport default () => {\n\treturn (\n\t\t<Nav>\n\t\t\t<h1>Seedr</h1>\n\t\t\t<h2>It's missing an 'e' so it's cool</h2>\n\t\t</Nav>\n\t);\n};\n\nconst Nav = styled.nav`\n\twidth: 100%;\n\tpadding: 0.5rem;\n\tbackground-color: aquamarine;\n\tcolor: white;\n\tfont-family: Inter;\n\t> * {\n\t\ttext-align: center;\n\t}\n\th1 {\n\t\tfont-size: 2rem;\n\t}\n\th2 {\n\t\tfont-size: 1rem;\n\t}\n\tanimation: colors 15s infinite;\n\n\t@keyframes colors {\n\t\t0% {\n\t\t\tfilter: hue-rotate(0);\n\t\t}\n\t\t100% {\n\t\t\tfilter: hue-rotate(360deg);\n\t\t}\n\t}\n`;\n","import Select from 'react-select';\nimport React from 'react';\nimport styled from 'styled-components';\n\nconst options = [\n\t{ value: 'name', label: 'Name' },\n\t{ value: 'addressCity', label: 'City' },\n\t{ value: 'addressBuilding', label: 'Address' },\n\t{ value: 'addressZipCode', label: 'Zip Code' },\n\t{ value: 'phoneMobile', label: 'Phone' },\n\t{ value: 'numberInt', label: 'Random Integer' },\n\t{ value: 'numberFloat', label: 'Random Float' },\n\t{ value: 'numberBool', label: 'Random Boolean' },\n\t{ value: 'date', label: 'Date' },\n\t{ value: 'dateDOB', label: 'Date of Birth' },\n\t{ value: 'time', label: 'Random Time' },\n\t{ value: 'stringShort', label: 'Random Sentence' },\n\t{ value: 'stringLong', label: 'Random Paragraph' },\n\t{ value: 'internetEmail', label: 'Email' },\n\t{ value: 'internetDomain', label: 'Website' },\n\t{ value: 'internetUrl', label: 'URL' },\n\t{ value: 'colorHEX', label: 'HEX color' },\n\t{ value: 'bankCCNumber', label: 'Random Credit Card number' },\n\t{ value: 'personNickname', label: 'Username' },\n\t{ value: 'personAvatar', label: 'Link to random robohash avatar' },\n\t{ value: 'personPassword', label: 'Password' },\n\t{ value: 'productName', label: 'Random Product Name' },\n\t{ value: 'companyName', label: 'Company name' },\n];\n\nexport default ({ setFields }) => {\n\treturn (\n\t\t<StyledSelect\n\t\t\tonChange={fields => setFields(fields)}\n\t\t\tisMulti={true}\n\t\t\toptions={options}\n\t\t\tplaceholder={'Data...'}\n\t\t/>\n\t);\n};\n\nconst StyledSelect = styled(Select)`\n\twidth: 50%;\n\theight: 2.5rem;\n`;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Select from '../SelectField';\n\nexport default ({\n\tmodel,\n\tsetModel,\n\tfields,\n\tsetFields,\n\tcopies,\n\tsetCopies,\n\tgenerateRequest,\n}) => (\n\t<Inputs>\n\t\t<ModelName\n\t\t\tplaceholder=\"What's the model name?\"\n\t\t\tautoFocus\n\t\t\tonChange={e => setModel(e.target.value)}\n\t\t\tvalue={model}\n\t\t\trequired\n\t\t/>\n\t\t<Select\n\t\t\tsetFields={setFields}\n\t\t\trequired={true}\n\t\t\tautoFocus={true}\n\t\t\tvalue={fields}\n\t\t/>\n\t\t<NumberOfSeeds\n\t\t\tonChange={e => setCopies(parseInt(e.target.value))}\n\t\t\tplaceholder='Number'\n\t\t\ttype='number'\n\t\t\trequired\n\t\t\tvalue={copies}\n\t\t\tmin='1'\n\t\t\tmax='20'\n\t\t/>\n\t\t<Submit onClick={generateRequest}>Generate</Submit>\n\t</Inputs>\n);\n\nconst Inputs = styled.form`\n\t@import url('https://fonts.googleapis.com/css?family=Inter:400,700,900&display=swap');\n\tdisplay: flex;\n\tflex-direction: row;\n\talign-items: center;\n\tjustify-content: center;\n\tfont-family: Inter;\n\t> * {\n\t\tmargin: 5rem 0.5rem;\n\t\theight: 2.5rem;\n\t\tfont-size: 1em;\n\t}\n`;\n\nconst NumberOfSeeds = styled.input`\n\twidth: 7rem;\n\tpadding: 5px 15px;\n\tborder-radius: 5px;\n\tborder: 1px solid #ccc;\n`;\n\nconst Submit = styled.button`\n\tpadding: 5px 15px;\n\tborder-radius: 5px;\n\tborder: 2px solid blue;\n\tbackground-color: white;\n`;\n\nconst ModelName = styled.input`\n\tpadding: 5px 15px;\n\tborder-radius: 5px;\n\tborder: 1px solid #ccc;\n`;\n","import React from 'react';\nimport SyntaxHighlighter from 'react-syntax-highlighter';\nimport { docco } from 'react-syntax-highlighter/dist/esm/styles/hljs';\n\nexport default ({ seeds }) => {\n\treturn (\n\t\t<>\n\t\t\t<SyntaxHighlighter language='ruby' style={docco}>\n\t\t\t\t{seeds}\n\t\t\t</SyntaxHighlighter>\n\t\t\t<button>Copy</button>\n\t\t</>\n\t);\n};\n","import React, { useState } from 'react';\nimport axios from 'axios';\nimport AwaitiInput from './states/AwaitInput';\nimport seedFormat from './seedFormat';\nimport SeedShow from './states/SeedShow';\n\nexport default () => {\n\tconst [model, setModel] = useState('artist');\n\tconst [fields, setFields] = useState([]);\n\tconst [copies, setCopies] = useState(2);\n\tconst [seeds, setSeeds] = useState('');\n\tconst [state, setState] = useState('awaitInput');\n\n\tconst generateRequest = e => {\n\t\te.preventDefault();\n\t\tconst req = {};\n\t\treq.token = process.env.REACT_APP_JSON_TOKEN;\n\t\treq.data = {};\n\t\tfields.map(field => (req.data[field.value] = field.value));\n\t\treq.data._repeat = copies;\n\t\tfetchSeedData(req);\n\t};\n\n\tconst fetchSeedData = async req => {\n\t\tsetState('loading');\n\t\ttry {\n\t\t\tconst res = await axios.post('https://app.fakejson.com/q', req);\n\t\t\tconsole.log(res);\n\t\t\tgenerateSeedStrings(res);\n\t\t\tsetState('show');\n\t\t} catch (error) {\n\t\t\tconsole.error(error);\n\t\t\tsetState('error');\n\t\t}\n\t};\n\n\tconst generateSeedStrings = res => {\n\t\tconst capitalizedModel = model.replace(/\\b\\w/g, l => l.toUpperCase());\n\t\tsetSeeds(seedFormat(capitalizedModel, res.data, copies));\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<AwaitiInput\n\t\t\t\tmodel={model}\n\t\t\t\tsetModel={setModel}\n\t\t\t\tfields={fields}\n\t\t\t\tsetFields={setFields}\n\t\t\t\tcopies={copies}\n\t\t\t\tsetCopies={setCopies}\n\t\t\t\tgenerateRequest={generateRequest}\n\t\t\t/>\n\t\t\t{\n\t\t\t\t{\n\t\t\t\t\tloading: <Loading />,\n\t\t\t\t\tshow: <SeedShow seeds={seeds} />,\n\t\t\t\t\terror: <Error />,\n\t\t\t\t}[state]\n\t\t\t}\n\t\t</>\n\t);\n};\n\nconst Loading = () => <div>Loading...</div>;\n\nconst Error = () => <div>There has been an error</div>;\n","export default (model, data, number) => {\n\tlet seed = `${model}.destroy_all`;\n\tconsole.log({ data });\n\tfor (let i = 0; i < number; i++) {\n\t\tseed += `\\r\\n${model[0].toLowerCase()}${i + 1} = ${model}.create `;\n\t\tconst properties = Object.keys(data[i]).map(\n\t\t\tobj => `:${obj} => '${data[i][obj]}'`,\n\t\t);\n\t\tseed += properties.join(', ');\n\t}\n\treturn seed;\n};\n","import React from 'react';\nimport Nav from './Nav';\nimport styled from 'styled-components';\nimport InputArea from './InputArea';\n\n// const JSON_TOKEN = process.env.REACT_APP_JSON_TOKEN;\n\nfunction App() {\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Nav />\n\t\t\t<Container>\n\t\t\t\t<InputArea />\n\t\t\t</Container>\n\t\t</div>\n\t);\n}\n\nconst Container = styled.main`\n\tmax-width: 1080px;\n\tmargin: 0 auto;\n`;\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport './components/style.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}